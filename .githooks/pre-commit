#!/bin/bash

# Pre-commit hook to prevent deployment issues
# This script runs before every commit to catch potential problems

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç Running pre-commit checks...${NC}"

# Check if we're in the right directory
if [ ! -f "vtt-react/package.json" ]; then
    echo -e "${RED}‚ùå Error: Must be run from project root directory${NC}"
    exit 1
fi

# Check for common issues
echo -e "${BLUE}üìã Checking for common issues...${NC}"

# Check for console.log statements (warn but don't fail)
if git diff --cached --name-only | grep -E '\.(js|jsx|ts|tsx)$' | xargs grep -l "console\.log" 2>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: Found console.log statements in staged files${NC}"
    echo -e "${YELLOW}   Consider removing them before production deployment${NC}"
fi

# Check for TODO/FIXME comments in staged files
if git diff --cached --name-only | grep -E '\.(js|jsx|ts|tsx)$' | xargs grep -l -E "(TODO|FIXME|XXX)" 2>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: Found TODO/FIXME comments in staged files${NC}"
fi

# Check for large files
echo -e "${BLUE}üì¶ Checking for large files...${NC}"
large_files=$(git diff --cached --name-only | xargs ls -la 2>/dev/null | awk '$5 > 1048576 {print $9 " (" $5 " bytes)"}')
if [ ! -z "$large_files" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: Large files detected:${NC}"
    echo "$large_files"
fi

# Check package.json for version consistency
echo -e "${BLUE}üìã Checking package.json...${NC}"
if git diff --cached --name-only | grep -q "vtt-react/package.json"; then
    echo -e "${GREEN}‚úÖ package.json changes detected${NC}"
fi

# Test build (only if package.json or source files changed)
changed_files=$(git diff --cached --name-only)
if echo "$changed_files" | grep -E '\.(js|jsx|ts|tsx|css|json)$' > /dev/null; then
    echo -e "${BLUE}üèóÔ∏è  Testing build process...${NC}"
    
    cd vtt-react
    
    # Quick build test (without full optimization)
    if ! npm run build > /dev/null 2>&1; then
        echo -e "${RED}‚ùå Build failed! Please fix build errors before committing.${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Build test passed${NC}"
    cd ..
fi

# Check for merge conflict markers
echo -e "${BLUE}üîç Checking for merge conflicts...${NC}"
if git diff --cached | grep -E '^(\+|\-)(<<<<<<< |======= |>>>>>>> )'; then
    echo -e "${RED}‚ùå Merge conflict markers found in staged files${NC}"
    exit 1
fi

# Lint staged files (if eslint is available)
echo -e "${BLUE}üßπ Running linter...${NC}"
cd vtt-react
if npm list eslint > /dev/null 2>&1; then
    staged_js_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '^vtt-react/.*\.(js|jsx)$' | sed 's|^vtt-react/||' || true)
    if [ ! -z "$staged_js_files" ]; then
        if ! npx eslint $staged_js_files --max-warnings 5; then
            echo -e "${YELLOW}‚ö†Ô∏è  Linting warnings found, but allowing commit${NC}"
            echo -e "${YELLOW}   Please fix linting issues when possible${NC}"
        else
            echo -e "${GREEN}‚úÖ Linting passed${NC}"
        fi
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  ESLint not found, skipping lint check${NC}"
fi
cd ..

# Check git status for untracked files that might be important
untracked_important=$(git status --porcelain | grep '^??' | grep -E '\.(js|jsx|css|json|md)$' || true)
if [ ! -z "$untracked_important" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: Untracked files that might be important:${NC}"
    echo "$untracked_important"
    echo -e "${YELLOW}   Consider adding them to git or .gitignore${NC}"
fi

# Final success message
echo -e "${GREEN}üéâ All pre-commit checks passed!${NC}"
echo -e "${BLUE}üìù Commit summary:${NC}"
echo -e "   Files changed: $(git diff --cached --name-only | wc -l)"
echo -e "   Lines added: $(git diff --cached --numstat | awk '{add+=$1} END {print add+0}')"
echo -e "   Lines removed: $(git diff --cached --numstat | awk '{del+=$2} END {print del+0}')"

exit 0
